name: Build

on:
  push:
    branches:
      - master
      - release/*
      - issue-*
  pull_request:
    branches:
      - master
  schedule:
    - cron: 0 7 * * 1

jobs:
  laravel5:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [7.2]
    steps:
      - uses: actions/checkout@v1
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none
      - name: Remove some dev dependencies
        run: composer remove "ekino/phpstan-banned-code" "nunomaduro/larastan" "phpmd/phpmd" "phpstan/phpstan-deprecation-rules" "sebastian/phpcpd" --dev --no-update
      - name: Require Laravel 5
        run: composer require laravel/framework:5.8.* orchestra/testbench:3.8.* orchestra/database:3.8.* --no-update
      - name: Install composer dependencies
        run: composer install --prefer-dist
      - name: Run the test suite
        run: phpdbg -qrr -dmemory_limit=3G vendor/bin/phpunit
  laravel6:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ 7.3 ]
    steps:
      - uses: actions/checkout@v1
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none
      - name: Remove some dev dependencies
        run: composer remove "ekino/phpstan-banned-code" "nunomaduro/larastan" "phpmd/phpmd" "phpstan/phpstan-deprecation-rules" "sebastian/phpcpd" --dev --no-update
      - name: Require Laravel 6
        run: composer require laravel/framework:^6.0 orchestra/testbench:^4.0 orchestra/database:^4.0 --no-update
      - name: Install composer dependencies
        run: composer install --prefer-dist
      - name: Run the test suite
        run: phpdbg -qrr -dmemory_limit=3G vendor/bin/phpunit
  laravel7:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ 7.4 ]
    steps:
      - uses: actions/checkout@v1
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none
      - name: Remove some dev dependencies
        run: composer remove "ekino/phpstan-banned-code" "nunomaduro/larastan" "phpmd/phpmd" "phpstan/phpstan-deprecation-rules" "sebastian/phpcpd" --dev --no-update
      - name: Require Laravel 7
        run: composer require laravel/framework:^7.0 orchestra/testbench:^5.0 orchestra/database:^5.0 --no-update
      - name: Install composer dependencies
        run: composer install --prefer-dist
      - name: Run the test suite
        run: phpdbg -qrr -dmemory_limit=3G vendor/bin/phpunit
  laravel7-cov:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ 8.0 ]
    steps:
      - uses: actions/checkout@v1
      - name: Cache composer dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-i18n-laravel-latest
        with:
          path: ~/.composer
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none
      - name: Remove some dev dependencies
        run: composer remove "ekino/phpstan-banned-code" "nunomaduro/larastan" "phpmd/phpmd" "phpstan/phpstan-deprecation-rules" "sebastian/phpcpd" --dev --no-update
      - name: Require Laravel 7
        run: composer require laravel/framework:^7.0 orchestra/testbench:^5.0 orchestra/database:^5.0 --no-update
      - name: Require phpunit 9.4
        run: composer require phpunit/phpunit:9.4.* --dev --no-update
      - name: Install composer dependencies
        run: composer install --prefer-dist
      - name: Run the Coverage test suite
        run: phpdbg -qrr -dmemory_limit=3G vendor/bin/phpunit --coverage-clover=clover.xml
      - name: Upload test coverage report to codecov.io
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash)